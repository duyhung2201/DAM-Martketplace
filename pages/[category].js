import Head from "next/head"
import Header from "../components/Header"
import ItemCard from "../components/ItemCard"
import styles from "../styles/Home.module.css"
import itemCategories from "../constants/itemCategories"
import useGlobalState from "../hooks/useGlobalState"
import { useMoralis } from "react-moralis"
import { useEffect } from "react"
import { useRouter } from "next/router"
import { collection, getDocs, query, where } from "firebase/firestore"
import { useCollection } from "react-firebase-hooks/firestore"
import { db } from "../firebase"
import { Skeleton } from "@mui/material"
import SkeletonItems from "../components/SkeletonItems"

export default function categoryPage(props) {
    const router = useRouter()
    const { account } = useMoralis()
    const [accountAddr, setAccountAddr] = useGlobalState("accountAddr")

    useEffect(() => {
        if (account) {
            setAccountAddr(account)
        }
    }, [account])

    const collectionReference = collection(db, "items_listed")
    const queryGetData = query(
        collectionReference,
        where("category", "==", router.asPath.slice(1).replace("-", " "))
    )
    const [dataSnapshot, dataLoading, error] = useCollection(queryGetData)

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <div className="flex flex-col">
                <div>
                    <p className="font-bold text-3xl mx-8 my-8">Explore Digital Assets</p>
                </div>
                <div className="flex flex-row justify-start mb-3 pb-2 border-b-2">
                    <p
                        className="mx-10 font-semibold text-slate-500 cursor-pointer hover:text-black"
                        onClick={() => {
                            router.push(`/`)
                        }}
                    >
                        All Products
                    </p>
                    {itemCategories.map((category) => {
                        return (
                            <p
                                className={`mx-10 font-semibold cursor-pointer  +${
                                    category == router.asPath.slice(1).replace("-", " ")
                                        ? " border-b-4 border-blue-400 text-black"
                                        : "hover:text-black text-slate-500"
                                }`}
                                onClick={() => {
                                    router.push(`/${category.replace(" ", "-")}`)
                                }}
                            >
                                {category}
                            </p>
                        )
                    })}
                </div>
                {dataSnapshot ? (
                    <div className="grid grid-cols-3 gap-3">
                        {dataSnapshot.docs.map((doc) => {
                            return (
                                <div className="flex flex-row justify-center">
                                    <ItemCard itemData={doc.data()} itemId={doc.id} />
                                </div>
                            )
                        })}
                    </div>
                ) : (
                    <SkeletonItems />
                )}
            </div>
        </div>
    )
}
